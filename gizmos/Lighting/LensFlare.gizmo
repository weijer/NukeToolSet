#! /Applications/Nuke9.0v6/Nuke9.0v6.app/Contents/MacOS/libnuke-9.0.6.dylib -nx
version 9.0 v6
Gizmo {
 addUserKnob {20 parameters_tab l "Lens Flare Main Parameters"}
 addUserKnob {41 LensFlare_Flare_Position l Flare_Position T BlinkScript1.LensFlare_Flare_Position}
 addUserKnob {26 ""}
 addUserKnob {41 "LensFlare_Oreol Size" l "Oreol Size" T "BlinkScript1.LensFlare_Oreol Size"}
 addUserKnob {41 "LensFlare_Oreol Attenuation" l "Oreol Attenuation" T "BlinkScript1.LensFlare_Oreol Attenuation"}
 addUserKnob {41 "LensFlare_Oreol Colour" l "Oreol Colour" T "BlinkScript1.LensFlare_Oreol Colour"}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_anamorpic l "Enable Anamorphic Stripe" +STARTLINE}
 addUserKnob {20 parameters_anamorphic l "Parameters For Anamorphic Flare" n 1}
 parameters_anamorphic 0
 addUserKnob {41 "LensFlare_Length for the main anamorphic line" l "Length for the main anamorphic line" T "BlinkScript1.LensFlare_Length for the main anamorphic line"}
 addUserKnob {41 "LensFlare_Brightness of the main anamorphic line" l "Brightness of the main anamorphic line" T "BlinkScript1.LensFlare_Brightness of the main anamorphic line"}
 addUserKnob {41 "LensFlare_Colour of the main anamorphic line" l "Colour of the main anamorphic line" T "BlinkScript1.LensFlare_Colour of the main anamorphic line"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_rainbow l "Enable Rainbow" +STARTLINE}
 trigger_rainbow true
 addUserKnob {20 parameters_for_rainbow l "Parameters For Rainbow" n 1}
 addUserKnob {41 "LensFlare_Central Rainbow Radius" l "Central Rainbow Radius" T "BlinkScript1.LensFlare_Central Rainbow Radius"}
 addUserKnob {41 "LensFlare_Central Rainbow Width" l "Central Rainbow Width" T "BlinkScript1.LensFlare_Central Rainbow Width"}
 addUserKnob {41 "LensFlare_Central Rainbow Brightness" l "Central Rainbow Brightness" T "BlinkScript1.LensFlare_Central Rainbow Brightness"}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_hexogons l "Enable Hexagons" +STARTLINE}
 addUserKnob {41 LensFlare_Angles l Angles T BlinkScript1.LensFlare_Angles}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_starburst l "Enable Starburst" +STARTLINE}
 addUserKnob {20 starburst_parameters l "Parameters For Starburst" n 1}
 addUserKnob {41 "LensFlare_Starburst Size" l "Starburst Size" T "BlinkScript1.LensFlare_Starburst Size"}
 addUserKnob {41 "LensFlare_Starburst Brightness" l "Starburst Brightness" T "BlinkScript1.LensFlare_Starburst Brightness"}
 addUserKnob {41 "LensFlare_Starburst Sharpness" l "Starburst Sharpness" T "BlinkScript1.LensFlare_Starburst Sharpness"}
 addUserKnob {41 "LensFlare_Starburst Colour" l "Starburst Colour" T "BlinkScript1.LensFlare_Starburst Colour"}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_floating_detail l "Enable Floating Detail" +STARTLINE}
 trigger_floating_detail true
 addUserKnob {20 patameters_for_floating_detail l "Parameters For Floating Detail" n 1}
 addUserKnob {41 "LensFlare_Colour Floating Detail" l "Colour Floating Detail" T "BlinkScript1.LensFlare_Colour Floating Detail"}
 addUserKnob {41 "LensFlare_Colour Floating Detail_panelDropped" l "panel dropped state" T "BlinkScript1.LensFlare_Colour Floating Detail_panelDropped"}
 addUserKnob {41 "LensFlare_Size Floating Detail" l "Size Floating Detail" T "BlinkScript1.LensFlare_Size Floating Detail"}
 addUserKnob {41 "LensFlare_Kernel Size Floating Detail" l "Kernel Size Floating Detail" T "BlinkScript1.LensFlare_Kernel Size Floating Detail"}
 addUserKnob {41 "LensFlare_Shift Floating Detail" l "Shift Floating Detail" T "BlinkScript1.LensFlare_Shift Floating Detail"}
 addUserKnob {20 endGroup_6 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_sparkles l "Enable Sparkles" +STARTLINE}
 addUserKnob {20 parameters_for_sparkles l "Parameters for Sparkles" n 1}
 parameters_for_sparkles 0
 addUserKnob {41 size T Sparkles1.size}
 addUserKnob {41 ray_nb l "rays Nb" T Sparkles1.ray_nb}
 addUserKnob {41 seed T Sparkles1.seed}
 addUserKnob {41 ray_falloff l "ray Falloff" T Sparkles1.ray_falloff}
 addUserKnob {41 spark_falloff l "sparkle falloff" T Sparkles1.spark_falloff}
 addUserKnob {41 multiply T Grade1.multiply}
 addUserKnob {20 endGroup_16 l endGroup n -1}
 addUserKnob {20 detail_1 l "Detail 1 Parameters"}
 addUserKnob {41 "LensFlare_Colour Detail1" l "Colour Detail1" T "BlinkScript1.LensFlare_Colour Detail1"}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_detail_1 l "Enable Detail 1" +STARTLINE}
 trigger_detail_1 true
 addUserKnob {20 detail_1_parameters l "Parameters for Detail 1" n 1}
 detail_1_parameters 0
 addUserKnob {41 "LensFlare_Colour Detail1_panelDropped" l "panel dropped state" T "BlinkScript1.LensFlare_Colour Detail1_panelDropped"}
 addUserKnob {41 "LensFlare_Size Detail1" l "Size Detail1" T "BlinkScript1.LensFlare_Size Detail1"}
 addUserKnob {41 "LensFlare_Distance Detail1" l "Distance Detail1" T "BlinkScript1.LensFlare_Distance Detail1"}
 addUserKnob {41 "LensFlare_Aberration Shift for Detail1" l "Aberration Shift for Detail1" T "BlinkScript1.LensFlare_Aberration Shift for Detail1"}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_secondary_detail_1 l "Enable Secondary Detail 1" +STARTLINE}
 trigger_secondary_detail_1 true
 addUserKnob {20 parameters_for_secondary_detail_1 l "Parameters for Secondary Detail 1" n 1}
 addUserKnob {41 "LensFlare_Secondary Brightness Detail1" l "Secondary Brightness Detail1" T "BlinkScript1.LensFlare_Secondary Brightness Detail1"}
 addUserKnob {41 "LensFlare_Secondary Size Detail1" l "Secondary Size Detail1" T "BlinkScript1.LensFlare_Secondary Size Detail1"}
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_dot_detail_1 l "Enable Dot 1" +STARTLINE}
 trigger_dot_detail_1 true
 addUserKnob {20 parameters_for_dot_1 l "Parameters for Dot 1" n 1}
 addUserKnob {41 "LensFlare_Dot Distance Detail1" l "Dot Distance Detail1" T "BlinkScript1.LensFlare_Dot Distance Detail1"}
 addUserKnob {41 "LensFlare_Dot Brightness Detail1" l "Dot Brightness Detail1" T "BlinkScript1.LensFlare_Dot Brightness Detail1"}
 addUserKnob {20 endGroup_5 l endGroup n -1}
 addUserKnob {20 detail_2_parameters l "Detail 2 Parameters"}
 addUserKnob {41 "LensFlare_Colour Detail2" l "Colour Detail2" T "BlinkScript1.LensFlare_Colour Detail2"}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_detail_2 l "Enable Detail 2" +STARTLINE}
 trigger_detail_2 true
 addUserKnob {20 parameters_for_detail_2 l "Parameters for Detail 2" n 1}
 addUserKnob {41 "LensFlare_Colour Detail2_panelDropped" l "panel dropped state" T "BlinkScript1.LensFlare_Colour Detail2_panelDropped"}
 addUserKnob {41 "LensFlare_Size Detail2" l "Size Detail2" T "BlinkScript1.LensFlare_Size Detail2"}
 addUserKnob {41 "LensFlare_Distance Detail2" l "Distance Detail2" T "BlinkScript1.LensFlare_Distance Detail2"}
 addUserKnob {41 "LensFlare_Aberration Shift for Detail2" l "Aberration Shift for Detail2" T "BlinkScript1.LensFlare_Aberration Shift for Detail2"}
 addUserKnob {20 endGroup_7 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_secondary_detail_2 l "Enable Secondary Detail 2" +STARTLINE}
 trigger_secondary_detail_2 true
 addUserKnob {20 parameters_for_secondary_detail_2 l "Parameters for Secondary Detail 2" n 1}
 addUserKnob {41 "LensFlare_Secondary Brightness Detail2" l "Secondary Brightness Detail2" T "BlinkScript1.LensFlare_Secondary Brightness Detail2"}
 addUserKnob {41 "LensFlare_Secondary Size Detail2" l "Secondary Size Detail2" T "BlinkScript1.LensFlare_Secondary Size Detail2"}
 addUserKnob {20 endGroup_8 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_dot_detail_2 l "Enable Dot 2" +STARTLINE}
 trigger_dot_detail_2 true
 addUserKnob {20 parameters_for_dot_2 l "Parameters for Dot 2" n 1}
 addUserKnob {41 "LensFlare_Dot Brightness Detail2" l "Dot Brightness Detail2" T "BlinkScript1.LensFlare_Dot Brightness Detail2"}
 addUserKnob {41 "LensFlare_Dot Distance Detail2" l "Dot Distance Detail2" T "BlinkScript1.LensFlare_Dot Distance Detail2"}
 addUserKnob {20 endGroup_9 l endGroup n -1}
 addUserKnob {20 detail_3_parameters l "Detail 3 Parameters"}
 addUserKnob {41 "LensFlare_Colour Detail3" l "Colour Detail3" T "BlinkScript1.LensFlare_Colour Detail3"}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_detail_3 l "Enable Detail 3" +STARTLINE}
 trigger_detail_3 true
 addUserKnob {20 parameters_for_detail_3 l "Parameters for Detail 3" n 1}
 parameters_for_detail_3 0
 addUserKnob {41 "LensFlare_Colour Detail3_panelDropped" l "panel dropped state" T "BlinkScript1.LensFlare_Colour Detail3_panelDropped"}
 addUserKnob {41 "LensFlare_Size Detail3" l "Size Detail3" T "BlinkScript1.LensFlare_Size Detail3"}
 addUserKnob {41 "LensFlare_Distance Detail3" l "Distance Detail3" T "BlinkScript1.LensFlare_Distance Detail3"}
 addUserKnob {41 "LensFlare_Aberration Shift for Detail3" l "Aberration Shift for Detail3" T "BlinkScript1.LensFlare_Aberration Shift for Detail3"}
 addUserKnob {20 endGroup_10 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_secondary_detail_3 l "Enable Secondary Detail 3" +STARTLINE}
 trigger_secondary_detail_3 true
 addUserKnob {20 parameters_for_secondary_detail_3 l "Parameters for Secondary Detail 3" n 1}
 parameters_for_secondary_detail_3 0
 addUserKnob {41 "LensFlare_Secondary Brightness Detail3" l "Secondary Brightness Detail3" T "BlinkScript1.LensFlare_Secondary Brightness Detail3"}
 addUserKnob {41 "LensFlare_Secondary Size Detail3" l "Secondary Size Detail3" T "BlinkScript1.LensFlare_Secondary Size Detail3"}
 addUserKnob {20 endGroup_11 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_dot_detail_3 l "Enable Dot 3" +STARTLINE}
 trigger_dot_detail_3 true
 addUserKnob {20 parameters_for_dot_3 l "Parameters for Dot 3" n 1}
 addUserKnob {41 "LensFlare_Dot Brightness Detail3" l "Dot Brightness Detail3" T "BlinkScript1.LensFlare_Dot Brightness Detail3"}
 addUserKnob {41 "LensFlare_Dot Distance Detail3" l "Dot Distance Detail3" T "BlinkScript1.LensFlare_Dot Distance Detail3"}
 addUserKnob {20 endGroup_12 l endGroup n -1}
 addUserKnob {20 detail_4_parameters l "Detail 4 Parameters"}
 addUserKnob {41 "LensFlare_Colour Detail4" l "Colour Detail4" T "BlinkScript1.LensFlare_Colour Detail4"}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_detail_4 l "Enable Detail 4" +STARTLINE}
 trigger_detail_4 true
 addUserKnob {20 parameters_for_detail_4 l "Parameters for Detail 4" n 1}
 addUserKnob {41 "LensFlare_Colour Detail4_panelDropped" l "panel dropped state" T "BlinkScript1.LensFlare_Colour Detail4_panelDropped"}
 addUserKnob {41 "LensFlare_Size Detail4" l "Size Detail4" T "BlinkScript1.LensFlare_Size Detail4"}
 addUserKnob {41 "LensFlare_Distance Detail4" l "Distance Detail4" T "BlinkScript1.LensFlare_Distance Detail4"}
 addUserKnob {41 "LensFlare_Aberration Shift for Detail4" l "Aberration Shift for Detail4" T "BlinkScript1.LensFlare_Aberration Shift for Detail4"}
 addUserKnob {20 endGroup_13 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_secondary_detail_4 l "Enable Secondary Detail 4" +STARTLINE}
 trigger_secondary_detail_4 true
 addUserKnob {20 parameters_for_secondary_detail_4 l "Parameters for Secondary Detail 4" n 1}
 addUserKnob {41 "LensFlare_Secondary Size Detail4" l "Secondary Size Detail4" T "BlinkScript1.LensFlare_Secondary Size Detail4"}
 addUserKnob {41 "LensFlare_Secondary Brightness Detail4" l "Secondary Brightness Detail4" T "BlinkScript1.LensFlare_Secondary Brightness Detail4"}
 addUserKnob {20 endGroup_14 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {6 trigger_dot_detail_4 l "Enable Dot 4" +STARTLINE}
 trigger_dot_detail_4 true
 addUserKnob {20 parameters_for_dot_4 l "Parameters for Dot 4" n 1}
 addUserKnob {41 "LensFlare_Dot Distance Detail4" l "Dot Distance Detail4" T "BlinkScript1.LensFlare_Dot Distance Detail4"}
 addUserKnob {41 "LensFlare_Dot Brightness Detail4" l "Dot Brightness Detail4" T "BlinkScript1.LensFlare_Dot Brightness Detail4"}
 addUserKnob {20 endGroup_15 l endGroup n -1}
}
 Sparkles {
  inputs 0
  mode Sparkles
  position {{parent.BlinkScript1.LensFlare_Flare_Position.x} {parent.BlinkScript1.LensFlare_Flare_Position.y}}
  seed 33
  chroma_shift 0.3
  chroma_spread 0.02
  vismask -rgba.alpha
  sparkle_crawl true
  fadeTolerance 5
  broken_rays true
  broken_start 0.965
  broken_holes 0.412
  name Sparkles1
  xpos 251
  ypos -67
 }
 Grade {
  name Grade1
  selected true
  xpos 251
  ypos -43
 }
 Input {
  inputs 0
  name Input1
  xpos 247
  ypos -111
 }
 Constant {
  inputs 0
  channels rgb
  name Constant1
  xpos 78
  ypos -204
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input]"}}
  name Switch1
  xpos 78
  ypos -111
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "1 \"LensFlare\" iterate pixelWise a0b0f1f794535e7b5ea9b498fe32196e8c3486f68181362a59b88471ab8497c3 2 \"src\" Read Random \"dst\" Write Point 68 \"Flare_Position\" Float 2 AABIRAAASEQ= \"Switch to Hexagons\" Int 1 AAAAAA== \"Angles\" Int 1 BgAAAA== \"Enable Starburst\" Int 1 AAAAAA== \"Enable Anamorphic\" Int 1 AAAAAA== \"Enable Main Rainbow\" Int 1 AQAAAA== \"Enable Floating Detail\" Int 1 AQAAAA== \"Enable Detail_1\" Int 1 AQAAAA== \"Enable Secondary Detail_1\" Int 1 AQAAAA== \"Enable Dot_1\" Int 1 AQAAAA== \"Enable Detail_2\" Int 1 AQAAAA== \"Enable Secondary Detail_2\" Int 1 AQAAAA== \"Enable Dot_2\" Int 1 AQAAAA== \"Enable Detail_3\" Int 1 AQAAAA== \"Enable Secondary Detail_3\" Int 1 AQAAAA== \"Enable Dot_3\" Int 1 AQAAAA== \"Enable Detail_4\" Int 1 AQAAAA== \"Enable Secondary Detail_4\" Int 1 AQAAAA== \"Enable Dot_4\" Int 1 AQAAAA== \"Length for the main anamorphic line\" Float 1 AAAAPw== \"Brightness of the main anamorphic line\" Float 1 AACAPw== \"Colour of the main anamorphic line\" Float 4 AACAPwAAgD8AAIA/AACAPw== \"Oreol Size\" Float 1 AAB6Qw== \"Oreol Attenuation\" Float 1 AAAAAA== \"Oreol Colour\" Float 4 AACAPwAAgD8AAIA/AACAPw== \"Starburst Size\" Float 1 AACAPw== \"Starburst Brightness\" Float 1 AACAPg== \"Starburst Sharpness\" Float 1 AABAQA== \"Starburst Colour\" Float 4 AACAPwAAgD8AAIA/AACAPw== \"Central Rainbow Radius\" Float 1 AACgQQ== \"Central Rainbow Width\" Float 1 AICJQw== \"Central Rainbow Brightness\" Float 1 AAAAPg== \"Colour Floating Detail\" Float 4 rkfhPj0K1z4fhes+AAAAPw== \"Size Floating Detail\" Float 1 AADAPw== \"Kernel Size Floating Detail\" Float 1 AACgQw== \"Shift Floating Detail\" Float 3 zcxMPz0KVz8K12M/AAAAAA== \"Colour Detail1\" Float 4 ZmZmPzMzMz+amZk+AACgQA== \"Size Detail1\" Float 1 mpkZQA== \"Distance Detail1\" Float 1 AAAAvw== \"Aberration Shift for Detail1\" Float 3 zczMPpqZ2T5mZuY+AAAAAA== \"Colour Detail2\" Float 4 zcxMP83MTD/NzEw/AAAAQA== \"Size Detail2\" Float 1 AACwQA== \"Distance Detail2\" Float 1 zczMvg== \"Aberration Shift for Detail2\" Float 3 zcxMPgAAgD7NzIw+AAAAAA== \"Colour Detail3\" Float 4 zcxMP83MzD6amZk+AADAQA== \"Size Detail3\" Float 1 zczMPw== \"Distance Detail3\" Float 1 AAAAvw== \"Aberration Shift for Detail3\" Float 3 mpmZvmZmpr4zM7O+AAAAAA== \"Colour Detail4\" Float 4 MzMzP2ZmZj+amRk/AACgQA== \"Size Detail4\" Float 1 MzOzPw== \"Distance Detail4\" Float 1 zcxMvw== \"Aberration Shift for Detail4\" Float 3 mpmZvq5Hob5mZqa+AAAAAA== \"Secondary Brightness Detail1\" Float 1 mpmZPg== \"Secondary Size Detail1\" Float 1 AAAAPw== \"Secondary Brightness Detail2\" Float 1 mpmZPg== \"Secondary Size Detail2\" Float 1 MzOTPw== \"Secondary Brightness Detail3\" Float 1 mpmZPg== \"Secondary Size Detail3\" Float 1 7FF4Pw== \"Secondary Brightness Detail4\" Float 1 mpmZPg== \"Secondary Size Detail4\" Float 1 mpkZPg== \"Dot Brightness Detail1\" Float 1 mpmZPg== \"Dot Distance Detail1\" Float 1 AAAAPg== \"Dot Brightness Detail2\" Float 1 mpmZPg== \"Dot Distance Detail2\" Float 1 AAAgwA== \"Dot Brightness Detail3\" Float 1 mpmZPg== \"Dot Distance Detail3\" Float 1 AAAgwA== \"Dot Brightness Detail4\" Float 1 mpmZPg== \"Dot Distance Detail4\" Float 1 AACgvw=="
  kernelSource "//---------------------------------------------------------------------------------------\nint perm( int index )\n\{\n    int permData\[512] = \{\n    151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n    8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n    35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n    134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n    55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n    18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n    250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n    189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n    172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n    228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n    107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n    138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180, \n    151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n    8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n    35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n    134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n    55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n    18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n    250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n    189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n    172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n    228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n    107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n    138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180 \n    \};\n    return permData\[index];\n\};\n\n//---------------------------------------------------------------------------------------\nfloat3 grad3( int index )\n\{\n    float grad3Data\[12*3] = \{ 1.0f,1.0f,0.0f,-1.0f,1.0f,0.0f,1.0f,-1.0f,0.0f,-1.0f,\n                             -1.0f,0.0f,1.0f,0.0f,1.0f,-1.0f,0.0f,1.0f,1.0f,0.0f,-1.0f,\n                             -1.0f,0.0f,-1.0f,0.0f,1.0f,1.0f,0.0f,-1.0f,1.0f,0.0f,1.0f,\n                             -1.0f,0.0f,-1.0f,-1.0f \};\n\n    return (float3)(grad3Data\[index*3], grad3Data\[(index*3) + 1], \n            grad3Data\[(index*3) + 2]);\n\};\n\n//---------------------------------------------------------------------------------------\nfloat dotNoise( float3 g, float x, float y, float z ) \n\{\n    return g.x*x + g.y*y + g.z*z; \n\};\n\n//---------------------------------------------------------------------------------------\nint fastfloor( float x ) \n\{ \n    if( x > 0.0f )\n    \{\n        return (int)(x);\n    \}\n    else\n    \{\n        return (int)(x - 1);\n    \}\n\};\n\n//---------------------------------------------------------------------------------------\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nfloat raw_noise_3d(     float x, \n                        float y, \n                        float z ) \n\{\n    float n0, n1, n2, n3; // Noise contributions from the four corners\n\n    // Skew the input space to determine which simplex cell we're in\n    float F3 = 1.0f/3.0f;\n    float s = (x+y+z)*F3; // Very nice and simple skew factor for 3D\n    int i = floor(x+s);\n    int j = floor(y+s);\n    int k = floor(z+s);\n\n    float G3 = 1.0f/6.0f; // Very nice and simple unskew factor, too\n    float t = (i+j+k)*G3;\n    float X0 = i-t; // Unskew the cell origin back to (x,y,z) space\n    float Y0 = j-t;\n    float Z0 = k-t;\n    float x0 = x-X0; // The x,y,z distances from the cell origin\n    float y0 = y-Y0;\n    float z0 = z-Z0;\n\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    int i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    int i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n\n    if( x0 >= y0 ) \n    \{\n        if( y0>=z0 ) \n        \{ \n            i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; \n        \} // X Y Z order\n        else if( x0 >= z0 ) \n        \{ \n            i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; \n        \} // X Z Y order\n        else \n        \{ \n            i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; \n        \} // Z X Y order\n    \}\n    else \n    \{   // x0<y0\n        if(y0<z0) \n        \{ \n            i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; \n        \} // Z Y X order\n        else if(x0<z0) \n        \{ \n            i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; \n        \} // Y Z X order\n        else \n        \{ \n            i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; \n        \} // Y X Z order\n    \}\n\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    float x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n    float y1 = y0 - j1 + G3;\n    float z1 = z0 - k1 + G3;\n    float x2 = x0 - i2 + 2.0*G3; // Offsets for third corner in (x,y,z) coords\n    float y2 = y0 - j2 + 2.0*G3;\n    float z2 = z0 - k2 + 2.0*G3;\n    float x3 = x0 - 1.0 + 3.0*G3; // Offsets for last corner in (x,y,z) coords\n    float y3 = y0 - 1.0 + 3.0*G3;\n    float z3 = z0 - 1.0 + 3.0*G3;\n    \n    // Work out the hashed gradient indices of the four simplex corners\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int gi0 = perm(ii+perm(jj+perm(kk))) % 12;\n    int gi1 = perm(ii+i1+perm(jj+j1+perm(kk+k1))) % 12;\n    int gi2 = perm(ii+i2+perm(jj+j2+perm(kk+k2))) % 12;\n    int gi3 = perm(ii+1+perm(jj+1+perm(kk+1))) % 12;\n\n    // Calculate the contribution from the four corners\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0;\n    if( t0 < 0 ) \n    \{\n        n0 = 0.0;\n    \}\n    else \n    \{\n        t0 *= t0;\n        n0 = t0 * t0 * dotNoise(grad3(gi0), x0, y0, z0);\n    \}\n\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1;\n    if( t1<0 )\n    \{\n        n1 = 0.0;\n    \}\n    else \n    \{\n        t1 *= t1;\n        n1 = t1 * t1 * dotNoise(grad3(gi1), x1, y1, z1);\n    \}\n\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2;\n    if( t2 < 0 )\n    \{\n        n2 = 0.0;\n    \}\n    else \n    \{\n        t2 *= t2;\n        n2 = t2 * t2 * dotNoise(grad3(gi2), x2, y2, z2);\n    \}\n\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3;\n    if( t3 < 0 )\n    \{ \n        n3 = 0.0;\n    \}\n    else \n    \{\n        t3 *= t3;\n        n3 = t3 * t3 * dotNoise(grad3(gi3), x3, y3, z3);\n    \}\n\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to stay just inside \[-1,1]\n    return 32.0*(n0 + n1 + n2 + n3);\n\};\n\n//---------------------------------------------------------------------------------------\nfloat2 lerp2D(float2 a, float2 b, float x)\n\{\n  return a+(b-a)*x;\n\}\n\n//---------------------------------------------------------------------------------------\nfloat3 mix(float3 a, float3 b, float m)\{\n    return a*(1-m)+b*m;   \n\}\n\n//---------------------------------------------------------------------------------------\nfloat octave_noise_3d(  float octaves, \n                        float persistence, \n                        float scale, \n                        float x, \n                        float y, \n                        float z ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n\n    // We have to keep track of the largest possible amplitude,\n    // because each octave adds more, and we need a value in \[-1, 1].\n    float maxAmplitude = 0;\n    int i = 0;\n    for( i=0; i < octaves; i++ ) \n    \{\n        total += raw_noise_3d( x * frequency, y * frequency, z * frequency ) * amplitude;\n\n        frequency *= 2.0f;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n\n    return total / maxAmplitude;\n\};\n\n//---------------------------------------------------------------------------------------\nfloat smoothstep(const float a, const float b, const float x)\n\{\n  float t = clamp( (x-a)/(b-a), 0.0f, 1.0f);\n  return t*t*(3.0f-2.0f*t);\n\}\n\n//---------------------------------------------------------------------------------------\nfloat smootherstep(const float a, const float b, const float x)\n\{\n  float t = clamp( (x-a)/(b-a), 0.0f, 1.0f);\n  return t*t*t*(t*(t*6-15)+10);\n\}\n\n// Copyright (c) 2018 Alexei Selivanov\n//---------------------------------------------------------------------------------------\nfloat fit(float num, float oldmin, float oldmax, float newmin, float newmax)\n\{\n  if(num <= oldmin) return newmin;\n  if(num >= oldmax) return newmax;\n  return (num - oldmin)*(newmax - newmin)/(oldmax - oldmin) + newmin;\n\}\n\n//---------------------------------------------------------------------------------------\nfloat fract(float x)\{\n    return x-floor(x);\n\}\n\n//---------------------------------------------------------------------------------------\nfloat random(float x)\{\n  return fract(sin(x)*10.0);\n\}\n\n//---------------------------------------------------------------------------------------\nfloat saturate (float x)\n\{\n    return min(1.0f, max(0.0f,x));\n\}\n\n//---------------------------------------------------------------------------------------\nfloat3 saturate (float3 x)\n\{\n    return float3( saturate(x.x), saturate(x.y), saturate(x.z) );\n\}\n\n//---------------------------------------------------------------------------------------\n// --- Spectral Zucconi --------------------------------------------\n// By Alan Zucconi\n// Based on GPU Gems: https://developer.nvidia.com/sites/all/modules/custom/gpugems/books/GPUGems/gpugems_ch08.html\n// But with values optimised to match as close as possible the visible spectrum\n// Fits this: https://commons.wikimedia.org/wiki/File:Linear_visible_spectrum.svg\n// With weighter MSE (RGB weights: 0.3, 0.59, 0.11)\nfloat3 bump3y (float3 x, float3 yoffset)\n\{\n  float3 y = float3(1.,1.,1.) - x * x;\n  y = saturate(y-yoffset);\n  return y;\n\}\nfloat3 spectral_zucconi (float x)\n\{\n    // w: \[400, 700]\n  // x: \[0,   1]\n  // float x = saturate((w - 400.0)/ 300.0);\n\n  const float3 cs = float3(3.54541723, 2.86670055, 2.29421995);\n  const float3 xs = float3(0.69548916, 0.49416934, 0.28269708);\n  const float3 ys = float3(0.02320775, 0.15936245, 0.53520021);\n\n  return bump3y ( cs * (x - xs), ys);\n\}\n\n// Based on: https://www.shadertoy.com/view/tdSSD1\n//---------------------------------------------------------------------------------------\nfloat regShape(float2 p, int N, float size)\n\{   \n    float a=atan2(p.x,p.y)+0.2f;\n    float b=6.28319/float(N);\n    float d=cos(floor(0.5+a/b)*b-a)*length(p);\n    d+=sin(a*N)*size*0.025f;\n    float f=smootherstep(size,size+0.01f, d);     \n    return f;\n\}\n\n// Based on: https://www.shadertoy.com/view/4sX3Rs\n//---------------------------------------------------------------------------------------\nfloat3 detail(float2 uvOffset, \n              float2 positionUV,\n              float size_detail,\n              float4 colour_detail,\n              float3 offsetColour,\n              int angles,\n              bool type)\n\{\n  float3 result = float3(0.0f);\n  if (type == true) \n  \{\n    float f1 = max(0.01f-regShape(uvOffset + offsetColour.x*positionUV, angles, size_detail*0.05f),0.0f)*\n                (colour_detail.w*0.5f*colour_detail.x);\n    float f2 = max(0.01f-regShape(uvOffset + offsetColour.y*positionUV, angles, size_detail*0.05f),0.0f)*\n                (colour_detail.w*0.5f*colour_detail.y);\n    float f3 = max(0.01f-regShape(uvOffset + offsetColour.z*positionUV, angles, size_detail*0.05f),0.0f)*\n                (colour_detail.w*0.5f*colour_detail.z);\n    result = float3(f1,f2,f3);\n  \}\n  else\n  \{\n    float f1 = max(0.01f-pow(length(uvOffset+offsetColour.x*positionUV),size_detail),0.0f)*\n                (colour_detail.w*colour_detail.x);\n    float f2 = max(0.01f-pow(length(uvOffset+offsetColour.y*positionUV),size_detail),0.0f)*\n                (colour_detail.w*colour_detail.y);\n    float f3 = max(0.01f-pow(length(uvOffset+offsetColour.z*positionUV),size_detail),0.0f)*\n                (colour_detail.w*colour_detail.z);   \n    result = float3(f1,f2,f3);\n  \}\n  return result;\n\}\n\n//---------------------------------------------------------------------------------------\n//---------------------------------------------------------------------------------------\nfloat3 smallDot(float2 uvOffset,\n                float2 positionUV,\n                float dot_brightness_detail,\n                float4 colour_detail,\n                float distance)\n\{\n    float c2 =  max(0.04f/pow(length(uvOffset-positionUV*distance/2.0f + 0.09f), 1.0f), 0.0f)/20.0f;\n    float3 colour_small_dot = float3(dot_brightness_detail * colour_detail.w*colour_detail.x*c2,\n                                    dot_brightness_detail * colour_detail.w*colour_detail.y*c2,\n                                    dot_brightness_detail * colour_detail.w*colour_detail.z*c2);\n\n    return colour_small_dot;\n\}\n\n//---------------------------------------------------------------------------------------\nfloat3 secondary(float2 uvOffset,\n              float2 positionUV,\n              float secondary_brightness_detail,\n              float4 colour_detail,\n              float size,\n              float distance,\n              int angles,\n              bool type)\n\{\n    float3 colour_secondary = float3(0.0f);\n    if (type == true) \n    \{\n        float s = max(0.01f - regShape(uvOffset*5.0f + positionUV* distance + 0.25f, angles, size), 0.0f)*7.0f;\n        colour_secondary = float3(secondary_brightness_detail * colour_detail.w*0.5f*colour_detail.x*s,\n                                  secondary_brightness_detail * colour_detail.w*0.5f*colour_detail.y*s,\n                                  secondary_brightness_detail * colour_detail.w*0.5f*colour_detail.z*s);\n    \}\n    else\n    \{\n        float s = max(0.01f-pow(length(uvOffset*5.0f+positionUV* distance + 0.25f),size*10.0f),0.0f)*7.0f;\n        colour_secondary = float3(secondary_brightness_detail * colour_detail.w*colour_detail.x*s,\n                                  secondary_brightness_detail * colour_detail.w*colour_detail.y*s,\n                                  secondary_brightness_detail * colour_detail.w*colour_detail.z*s);\n    \}\n\n    return colour_secondary;\n\n\};\n\n//---------------------------------------------------------------------------------------\n//------------------------ MAIN KERNEL -------------------------------------\n\n//---------------------------------------------------------------------------------------\n///  @file lens_flare.blink\n///  @brief This file contains implementations of lens flare construction.\n//---------------------------------------------------------------------------------------\nkernel LensFlare : ImageComputationKernel<ePixelWise>\n\{\n  //-----------------------------------------------------------------------------------\n  // @brief src input image (or constant in case, when there is no input)\n  //-----------------------------------------------------------------------------------\n  Image<eRead, eAccessRandom, eEdgeClamped> src; \n  //----------------------------------------------------------------------------------- \n  // @brief dst output image\n  //-----------------------------------------------------------------------------------\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n  // --- Main Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief position of the main glow\n  //-----------------------------------------------------------------------------------\n  float2 m_flare_position;\n  //-----------------------------------------------------------------------------------\n  /// @brief type of secondary details: circular of hexagonal/octagonal\n  //-----------------------------------------------------------------------------------\n  int m_type_secondary_details;\n  //-----------------------------------------------------------------------------------\n  /// @brief number of angles in case of hexagonal/octagonal secondary details\n  //-----------------------------------------------------------------------------------\n  int m_angles;\n\n\n  // --- Enable/Disable Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief enables starburst in a center of a flare instead of oreol\n  //-----------------------------------------------------------------------------------\n  int m_enable_starburst;\n  //-----------------------------------------------------------------------------------\n  /// @brief enables anamorphic\n  //-----------------------------------------------------------------------------------\n  int m_enable_anamorphic;\n  //-----------------------------------------------------------------------------------\n  /// @brief enables main rainbow\n  //-----------------------------------------------------------------------------------\n  int m_enable_main_rainbow;\n  //-----------------------------------------------------------------------------------\n  /// @brief enables floating detail\n  //-----------------------------------------------------------------------------------\n  int m_enable_floating_detail;\n  //-----------------------------------------------------------------------------------\n  /// @brief enables detail_1\n  //-----------------------------------------------------------------------------------\n  int m_enable_detail_1;\n  //-----------------------------------------------------------------------------------\n  /// @brief enables secondary detail_1\n  //-----------------------------------------------------------------------------------\n  int m_enable_secondary_detail_1;\n  //-----------------------------------------------------------------------------------\n  /// @brief enables dot_1\n  //-----------------------------------------------------------------------------------\n  int m_enable_dot_1;\n  int m_enable_detail_2;\n  int m_enable_secondary_detail_2;\n  int m_enable_dot_2;\n  int m_enable_detail_3;\n  int m_enable_secondary_detail_3;\n  int m_enable_dot_3;\n  int m_enable_detail_4;\n  int m_enable_secondary_detail_4;\n  int m_enable_dot_4;\n\n\n  // --- Anamorphic Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief length for the main anamorphic line\n  //-----------------------------------------------------------------------------------\n  float  m_main_anamorphic_line_length;\n  //-----------------------------------------------------------------------------------\n  /// @brief brightness of the main anamorphic line\n  //-----------------------------------------------------------------------------------\n  float  m_main_anamorphic_line_brighntess;\n  //-----------------------------------------------------------------------------------\n  /// @brief colour of the main anamorphic line\n  //-----------------------------------------------------------------------------------\n  float4  m_main_anamorphic_line_colour;\n\n\n  // --- Oreol Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief size of the main glowing star, which places in center of flare position\n  //-----------------------------------------------------------------------------------\n  float  m_oreol_size;\n  //-----------------------------------------------------------------------------------\n  /// @brief attenuation of the glowing star\n  //-----------------------------------------------------------------------------------\n  float  m_oreol_attenuation;\n  //-----------------------------------------------------------------------------------\n  /// @brief colour of the glowing star\n  //-----------------------------------------------------------------------------------\n  float4  m_oreol_colour;\n\n\n  // --- Starburst Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief size of the starburst, which places in center of flare position\n  //-----------------------------------------------------------------------------------\n  float  m_starburst_size;\n  //-----------------------------------------------------------------------------------\n  /// @brief brightness of the starburst\n  //-----------------------------------------------------------------------------------\n  float  m_starburst_brightness;\n  //-----------------------------------------------------------------------------------\n  /// @brief starburst angles sharpness\n  //-----------------------------------------------------------------------------------\n  float  m_starburst_sharpness;\n  //-----------------------------------------------------------------------------------\n  /// @brief starburst colour\n  //-----------------------------------------------------------------------------------\n  float4  m_starburst_colour;\n\n\n  // --- Central Rainbow Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief radius of the rainbow, which places in center of flare position\n  //-----------------------------------------------------------------------------------\n  float m_central_rainbow_radius;\n  //-----------------------------------------------------------------------------------\n  /// @brief width of the rainbow, which places in center of flare position\n  //-----------------------------------------------------------------------------------\n  float m_central_rainbow_width;\n  //-----------------------------------------------------------------------------------\n  /// @brief brightness of the rainbow, which places in center of flare position\n  //-----------------------------------------------------------------------------------\n  float m_central_rainbow_brightness;\n\n\n  // --- Floating Far Detail Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief colour of the far floating detail \n  //-----------------------------------------------------------------------------------\n  float4 m_colour_floating_detail;\n  //-----------------------------------------------------------------------------------\n  /// @brief general size of the far floating detail \n  //-----------------------------------------------------------------------------------\n  float m_size_floating_detail;\n  //-----------------------------------------------------------------------------------\n  /// @brief size of the brightest part of the far floating detail \n  //-----------------------------------------------------------------------------------\n  float m_kernel_size_floating_detail;\n  //-----------------------------------------------------------------------------------\n  /// @brief floating detail shift \n  //-----------------------------------------------------------------------------------\n  float3 m_shift_floating_detail;\n\n\n  // It was considered to restrict number of details, secondary details and dots to 4\n  // Due to blink's limits accroding to typification, especcial in dynamic parameters\n  // it was decided to create static 4 parameters for all possible details, but hide \n  // them of upper (gizmo/group) level accroding to python scripting\n  // Moreover, it was found out, that it is impossible to assign parameter to array \n  // via defineParam. So it will be done on python (gizmo/group) UI level\n  // --- Detail Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief colour of details \n  //-----------------------------------------------------------------------------------\n  float4 m_colour_detail_1;\n  //-----------------------------------------------------------------------------------\n  /// @brief size of details \n  //-----------------------------------------------------------------------------------\n  float m_size_detail_1;\n  //-----------------------------------------------------------------------------------\n  /// @brief distance for details \n  //-----------------------------------------------------------------------------------\n  float m_distance_detail_1;\n  //-----------------------------------------------------------------------------------\n  /// @brief abberation shift for details \n  //-----------------------------------------------------------------------------------\n  float3 m_shift_detail_1;\n\n  float4 m_colour_detail_2;\n  float m_size_detail_2;\n  float m_distance_detail_2;\n  float3 m_shift_detail_2;\n\n  float4 m_colour_detail_3;\n  float m_size_detail_3;\n  float m_distance_detail_3;\n  float3 m_shift_detail_3;\n\n  float4 m_colour_detail_4;\n  float m_size_detail_4;\n  float m_distance_detail_4;\n  float3 m_shift_detail_4;\n\n\n  // --- Secondary Detail Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief colour of secondary details \n  //-----------------------------------------------------------------------------------\n  float m_secondary_brightness_detail_1;\n  //-----------------------------------------------------------------------------------\n  /// @brief colour of secondary details \n  //-----------------------------------------------------------------------------------\n  float m_secondary_size_detail_1;\n\n  float m_secondary_brightness_detail_2;\n  float m_secondary_size_detail_2;\n\n  float m_secondary_brightness_detail_3;\n  float m_secondary_size_detail_3;\n\n  float m_secondary_brightness_detail_4;\n  float m_secondary_size_detail_4;\n  \n\n  // --- Dot Paramenters ---\n  //-----------------------------------------------------------------------------------\n  /// @brief brightness of dot \n  //-----------------------------------------------------------------------------------\n  float m_dot_brightness_detail_1;\n  //-----------------------------------------------------------------------------------\n  /// @brief position of details \n  //-----------------------------------------------------------------------------------\n  float m_dot_distance_detail_1;\n  \n  float m_dot_brightness_detail_2;\n  float m_dot_distance_detail_2;\n\n  float m_dot_brightness_detail_3;\n  float m_dot_distance_detail_3;\n\n  float m_dot_brightness_detail_4;\n  float m_dot_distance_detail_4;\n\nlocal:\n  int src_width;\n  int src_height;\n\n  void define() \n  \{\n    // --- Main Paramenters ---\n    defineParam(m_flare_position, \"Flare_Position\",  float2(800.0f, 800.0f));\n    defineParam(m_type_secondary_details, \"Switch to Hexagons\", 0);\n    defineParam(m_angles, \"Angles\", 6);\n\n    // --- Enable/Disable Paramenters ---\n    defineParam(m_enable_starburst, \"Enable Starburst\", 0);\n    defineParam(m_enable_anamorphic, \"Enable Anamorphic\", 0);\n    defineParam(m_enable_main_rainbow, \"Enable Main Rainbow\", 1);\n    defineParam(m_enable_floating_detail, \"Enable Floating Detail\", 1);\n    defineParam(m_enable_detail_1, \"Enable Detail_1\", 1);\n    defineParam(m_enable_secondary_detail_1, \"Enable Secondary Detail_1\", 1);\n    defineParam(m_enable_dot_1, \"Enable Dot_1\", 1);\n    defineParam(m_enable_detail_2, \"Enable Detail_2\", 1);\n    defineParam(m_enable_secondary_detail_2, \"Enable Secondary Detail_2\", 1);\n    defineParam(m_enable_dot_2, \"Enable Dot_2\", 1);\n    defineParam(m_enable_detail_3, \"Enable Detail_3\", 1);\n    defineParam(m_enable_secondary_detail_3, \"Enable Secondary Detail_3\", 1);\n    defineParam(m_enable_dot_3, \"Enable Dot_3\", 1);\n    defineParam(m_enable_detail_4, \"Enable Detail_4\", 1);\n    defineParam(m_enable_secondary_detail_4, \"Enable Secondary Detail_4\", 1);\n    defineParam(m_enable_dot_4, \"Enable Dot_4\", 1);\n\n    // --- Anamorphic Paramenters ---\n    defineParam(m_main_anamorphic_line_length, \"Length for the main anamorphic line\", 0.5f);\n    defineParam(m_main_anamorphic_line_brighntess, \"Brightness of the main anamorphic line\", 1.0f);\n    defineParam(m_main_anamorphic_line_colour, \"Colour of the main anamorphic line\", float4(1.0f, 1.0f, 1.0f, 1.0f));\n\n    // --- Starburst Paramenters ---\n    defineParam(m_starburst_size, \"Starburst Size\", 1.0f);\n    defineParam(m_starburst_brightness, \"Starburst Brightness\", 0.25f);\n    defineParam(m_starburst_sharpness, \"Starburst Sharpness\", 3.0f);\n    defineParam(m_starburst_colour, \"Starburst Colour\", float4(1.0f, 1.0f, 1.0f, 1.0f));\n\n    // --- Oreol Paramenters ---\n    defineParam(m_oreol_size, \"Oreol Size\", 250.0f);\n    defineParam(m_oreol_attenuation, \"Oreol Attenuation\", 0.0f);\n    defineParam(m_oreol_colour, \"Oreol Colour\", float4(1.0f, 1.0f, 1.0f, 1.0f));\n\n    // --- Central Rainbow Paramenters ---\n    defineParam(m_central_rainbow_radius, \"Central Rainbow Radius\", 20.0f);\n    defineParam(m_central_rainbow_width, \"Central Rainbow Width\", 275.0f);\n    defineParam(m_central_rainbow_brightness, \"Central Rainbow Brightness\", 0.125f);\n\n    // --- Floating Far Detail Paramenters ---\n    defineParam(m_colour_floating_detail, \"Colour Floating Detail\",  float4(0.44f, 0.42f, 0.46f, 0.5f));\n    defineParam(m_size_floating_detail, \"Size Floating Detail\",  1.5f);\n    defineParam(m_kernel_size_floating_detail, \"Kernel Size Floating Detail\",  320.0f);\n    defineParam(m_shift_floating_detail, \"Shift Floating Detail\",  float3(0.8f, 0.84f, 0.89f));\n\n    // --- Detail Paramenters ---\n    defineParam(m_colour_detail_1, \"Colour Detail1\",  float4(0.9f, 0.7f, 0.3f, 5.0f));\n    defineParam(m_size_detail_1, \"Size Detail1\",  2.4f);\n    defineParam(m_distance_detail_1, \"Distance Detail1\",  -0.5f);\n    defineParam(m_shift_detail_1, \"Aberration Shift for Detail1\", float3(0.4f, 0.425f, 0.45f));\n    \n    defineParam(m_colour_detail_2, \"Colour Detail2\",  float4(0.8f, 0.8f, 0.8f, 2.0f));\n    defineParam(m_size_detail_2, \"Size Detail2\",  5.5f);\n    defineParam(m_distance_detail_2, \"Distance Detail2\",  -0.4f);\n    defineParam(m_shift_detail_2, \"Aberration Shift for Detail2\", float3(0.2f, 0.25f, 0.275f));\n\n    defineParam(m_colour_detail_3, \"Colour Detail3\",  float4(0.8f, 0.4f, 0.3f, 6.0f));\n    defineParam(m_size_detail_3, \"Size Detail3\",  1.6f);\n    defineParam(m_distance_detail_3, \"Distance Detail3\",  -0.5f);\n    defineParam(m_shift_detail_3, \"Aberration Shift for Detail3\", float3(-0.3f, -0.325f, -0.35f));\n\n    defineParam(m_colour_detail_4, \"Colour Detail4\",  float4(0.7f, 0.9f, 0.6f, 5.0f));\n    defineParam(m_size_detail_4, \"Size Detail4\",  1.4f);\n    defineParam(m_distance_detail_4, \"Distance Detail4\",  -0.8f);\n    defineParam(m_shift_detail_4, \"Aberration Shift for Detail4\", float3(-0.3f, -0.315f, -0.325f));\n\n    // --- Secondary Detail Paramenters ---\n    defineParam(m_secondary_brightness_detail_1, \"Secondary Brightness Detail1\",  0.3f);\n    defineParam(m_secondary_size_detail_1, \"Secondary Size Detail1\",  0.5f);\n\n    defineParam(m_secondary_brightness_detail_2, \"Secondary Brightness Detail2\",  0.3f);\n    defineParam(m_secondary_size_detail_2, \"Secondary Size Detail2\",  1.15f);\n\n    defineParam(m_secondary_brightness_detail_3, \"Secondary Brightness Detail3\",  0.3f);\n    defineParam(m_secondary_size_detail_3, \"Secondary Size Detail3\",  0.97f);\n\n    defineParam(m_secondary_brightness_detail_4, \"Secondary Brightness Detail4\",  0.3f);\n    defineParam(m_secondary_size_detail_4, \"Secondary Size Detail4\",  0.15f);\n\n    // --- Dot Paramenters ---\n    defineParam(m_dot_brightness_detail_1, \"Dot Brightness Detail1\",  0.3f);\n    defineParam(m_dot_distance_detail_1, \"Dot Distance Detail1\",  0.125f);\n\n    defineParam(m_dot_brightness_detail_2, \"Dot Brightness Detail2\",  0.3f);\n    defineParam(m_dot_distance_detail_2, \"Dot Distance Detail2\",  -2.5f);\n\n    defineParam(m_dot_brightness_detail_3, \"Dot Brightness Detail3\",  0.3f);\n    defineParam(m_dot_distance_detail_3, \"Dot Distance Detail3\",  -2.5f);\n\n    defineParam(m_dot_brightness_detail_4, \"Dot Brightness Detail4\",  0.3f);\n    defineParam(m_dot_distance_detail_4, \"Dot Distance Detail4\",  -1.25f);\n  \}\n\n  void init() \n  \{\n    src_width = src.bounds.width();\n    src_height = src.bounds.height();\n  \}\n\n  void process(int2 pos) \n  \{\n    float2 posf(pos.x, pos.y);\n    SampleType(dst) sample(0.0f);\n\n    // -------------- MAIN PARAMETERS --------------\n    float2 delta = posf - m_flare_position;\n    float deltaDistance = length(delta);\n    float2 positionUV = m_flare_position / float2(src_width, src_height) - 0.5;\n    positionUV.x *= src_width/src_height;\n    float positionUVDistance = length(positionUV);\n\n    float2 uv = posf / float2(src_width, src_height) - 0.5f;\n    float2 uvDistance = uv * length(uv);\n\tuv.x *= src_width/src_height;\n\n    // -------------- OREOL --------------\n    float attenuation_size = m_oreol_size + 10000.0f * (1 - \n                            clamp(m_oreol_attenuation, 0.0f, 1.0f));\n    float invert_size = 1.0f/(attenuation_size * attenuation_size);\n\n    float value = clamp(1.0f - dot(delta, delta) * invert_size, 0.0f, 1.0f);\n    value = clamp(pow(value, 10) - 0.001f, 0.0f, 1.0f);\n\n    float colour_oreol = 0.0f;\n\n    colour_oreol += (0.01+m_oreol_size*.2)/(length(delta)+0.001f);\n    float noise_oreol = octave_noise_3d(8.0f, 0.6f, 0.5f, atan2(delta.x,delta.y) \n                    ,0.0f, 0.0f) * 0.55f;   \n    colour_oreol += noise_oreol * colour_oreol;\n\n    colour_oreol *= value;\n\n    sample.x += colour_oreol * m_oreol_colour.x;\n    sample.y += colour_oreol * m_oreol_colour.y;\n    sample.z += colour_oreol * m_oreol_colour.z;\n\n    // -------------- STARBURST --------------\n    if (m_enable_starburst == 1) \n    \{ \n\n        float f = 1.0f/clamp(m_starburst_sharpness, 0.001f, 6.0f); \n        float2 size_starburst = m_starburst_size* fabs(delta+delta)/src_height;\n        float colour_starburst = clamp(1.0f - 2.0f*pow((  pow(2.0f*size_starburst.x, f) + \n                                pow(size_starburst.x + size_starburst.y*1.7f, f) + \n                                pow(fabs(size_starburst.x - size_starburst.y*1.7f), f))/\n                                2.5f, 1.0f/f), 0.0f, 10000.0f) * m_starburst_brightness;\n\n        sample.x += colour_starburst * m_starburst_colour.x;\n        sample.y += colour_starburst * m_starburst_colour.y;\n        sample.z += colour_starburst * m_starburst_colour.z;\n    \}\n\n    // -------------- ANAMORPHIC MAIN LINE -------------- \n    if (m_enable_anamorphic == 1)\n    \{\n        float2 distance_sqr = fabs(delta+delta)/src_height;\n        distance_sqr *= m_main_anamorphic_line_length;\n        float main_anamorphic_line = max( pow( 1.0f - distance_sqr.y, 128.0f ) * \n                                        ( 1.0f - length(distance_sqr) ), 0.0f ) * \n                                        m_main_anamorphic_line_brighntess;\n\n        sample.x += main_anamorphic_line * m_main_anamorphic_line_colour.x;\n        sample.y += main_anamorphic_line * m_main_anamorphic_line_colour.y;\n        sample.z += main_anamorphic_line * m_main_anamorphic_line_colour.z;\n    \}\n\n    // -------------- RAINBOW --------------\n    if (m_enable_main_rainbow == 1)\n    \{\n        float mm = fit( deltaDistance, m_central_rainbow_radius, m_central_rainbow_radius +\n                m_central_rainbow_width, 0.0f, 1.0f);\n        float3 spectrum = spectral_zucconi( fract(mm/1.0f+0.0f)) ;\n        if (deltaDistance > m_central_rainbow_radius + m_central_rainbow_width) spectrum *=0.0f;\n        if (deltaDistance < m_central_rainbow_radius) spectrum *=0.0f;\n\n        float noise = clamp(raw_noise_3d(atan2(delta.x,delta.y)*50.0f, 0.0f, 0.0f) * 0.15f,\n                    0.1f, 1.0f);\n\n        sample.x += spectrum.x * noise * m_central_rainbow_brightness;\n        sample.y += spectrum.y * noise * m_central_rainbow_brightness;\n        sample.z += spectrum.z * noise * m_central_rainbow_brightness;\n    \}\n    \n\n    // -------------- FLOATING DETAIL --------------\n    if (m_enable_floating_detail == 1)\n    \{\n        float floating_x = max(1.0f/(1.0f+m_kernel_size_floating_detail*\n                        pow(length(uvDistance+m_shift_floating_detail.x*positionUV),\n                        m_size_floating_detail)),0.0f)*(m_colour_floating_detail.w*\n                        m_colour_floating_detail.x);\n        float floating_y = max(1.0f/(1.0f+m_kernel_size_floating_detail*\n                        pow(length(uvDistance+m_shift_floating_detail.y*positionUV),\n                        m_size_floating_detail)),0.0f)*(m_colour_floating_detail.w*\n                        m_colour_floating_detail.y);\n        float floating_z = max(1.0f/(1.0f+m_kernel_size_floating_detail*\n                        pow(length(uvDistance+m_shift_floating_detail.z*positionUV),\n                        m_size_floating_detail)),0.0f)*(m_colour_floating_detail.w*\n                        m_colour_floating_detail.z);\n\n        sample.x += floating_x;\n        sample.y += floating_y;\n        sample.z += floating_z;\n    \}\n\n    // -------------- DETAIL 1 --------------\n    float2 uvOffset = lerp2D(uv,uvDistance,m_distance_detail_1);\n\n    if (m_enable_detail_1 == 1)\n    \{\n        float3 colour_detail_1 = detail(uvOffset, positionUV, m_size_detail_1, m_colour_detail_1, \n                                 m_shift_detail_1, m_angles, m_type_secondary_details);\n\n\n        if (m_type_secondary_details == 1)\n        \{\n            float shift_detail_1_average = (m_shift_detail_1.x + m_shift_detail_1.y +\n                                            m_shift_detail_1.z)/3;\n            float3 colour_detail_1_edge = detail(uvOffset, positionUV, m_size_detail_1 - \n                                          m_size_detail_1*0.1f, m_colour_detail_1, \n                                          float3(shift_detail_1_average, shift_detail_1_average, \n                                          shift_detail_1_average), m_angles, m_type_secondary_details);\n\n            colour_detail_1_edge = colour_detail_1 - colour_detail_1_edge;\n            colour_detail_1 += colour_detail_1_edge;\n        \}\n\n        sample.x += colour_detail_1.x;\n        sample.y += colour_detail_1.y;\n        sample.z += colour_detail_1.z;\n    \}\n\n    // -------------- DOT 1 --------------\n    if (m_enable_dot_1 == 1)\n    \{\n        float3 small_dot_1 = smallDot(uvOffset, positionUV, m_dot_brightness_detail_1,\n                            m_colour_detail_1, m_dot_distance_detail_1);\n                                \n        sample.x += small_dot_1.x;\n        sample.y += small_dot_1.y;\n        sample.z += small_dot_1.z;\n    \}\n\n    // -------------- SECONDARY DETAIL 1 --------------\n    if (m_enable_secondary_detail_1 == 1)\n    \{\n        float3 secondary_1 = secondary(uvOffset, positionUV, m_secondary_brightness_detail_1,\n                             m_colour_detail_1, m_secondary_size_detail_1, 0.77f, m_angles, \n                             m_type_secondary_details);\n\n        if (m_type_secondary_details == 1)\n        \{\n            float3 secondary_1_edge = secondary(uvOffset, positionUV, m_secondary_brightness_detail_1,\n                                       m_colour_detail_1, m_secondary_size_detail_1 - m_secondary_size_detail_1*0.1f, \n                                       0.77f, m_angles, m_type_secondary_details);\n\n            secondary_1_edge = secondary_1 - secondary_1_edge;\n            secondary_1 += secondary_1_edge;\n        \}\n\n        sample.x += secondary_1.x;\n        sample.y += secondary_1.y;\n        sample.z += secondary_1.z;\n    \}\n\n    // -------------- DETAIL 2 --------------\n    uvOffset = lerp2D(uv,uvDistance,m_distance_detail_2);\n\t\n    if (m_enable_detail_2 == 1)\n    \{\n        float3 colour_detail_2 = detail(uvOffset, positionUV, m_size_detail_2, m_colour_detail_2, \n                                 m_shift_detail_2, m_angles, m_type_secondary_details);\n\n        if (m_type_secondary_details == 1)\n        \{\n            float shift_detail_2_average = (m_shift_detail_2.x + m_shift_detail_2.y +\n                                            m_shift_detail_2.z)/3;\n            float3 colour_detail_2_edge = detail(uvOffset, positionUV, m_size_detail_2 - \n                                          m_size_detail_2*0.1f, m_colour_detail_2, \n                                          float3(shift_detail_2_average, shift_detail_2_average, \n                                          shift_detail_2_average), m_angles, m_type_secondary_details);\n\n            colour_detail_2_edge = colour_detail_2 - colour_detail_2_edge;\n            colour_detail_2 += colour_detail_2_edge;\n        \}\n\n        sample.x += colour_detail_2.x;\n        sample.y += colour_detail_2.y;\n        sample.z += colour_detail_2.z;\n    \}\n\n    // -------------- DOT 2 --------------\n    if (m_enable_dot_2 == 1)\n    \{\n        float3 small_dot_2 = smallDot(uvOffset, positionUV, m_dot_brightness_detail_2,\n                                    m_colour_detail_2, m_dot_distance_detail_2);\n                                \n        sample.x += small_dot_2.x;\n        sample.y += small_dot_2.y;\n        sample.z += small_dot_2.z;\n    \}\n\n    // -------------- SECONDARY DETAIL 2 --------------\n    if (m_enable_secondary_detail_2 == 1)\n    \{\n        float3 secondary_2 = secondary(uvOffset, positionUV, m_secondary_brightness_detail_2,\n                                m_colour_detail_2, m_secondary_size_detail_2, 4.1f, m_angles, \n                                m_type_secondary_details);\n\n        if (m_type_secondary_details == 1)\n        \{\n            float3 secondary_2_edge = secondary(uvOffset, positionUV, m_secondary_brightness_detail_2,\n                                       m_colour_detail_2, m_secondary_size_detail_2 - m_secondary_size_detail_2*0.1f, \n                                       4.1f, m_angles, m_type_secondary_details);\n\n            secondary_2_edge = secondary_2 - secondary_2_edge;\n            secondary_2 += secondary_2_edge;\n        \}\n\n        sample.x += secondary_2.x;\n        sample.y += secondary_2.y;\n        sample.z += secondary_2.z;\n    \}\n\n    // -------------- DETAIL 3 --------------\n\tuvOffset = lerp2D(uv,uvDistance,m_distance_detail_3);\n\t\n    if (m_enable_detail_3 == 1)\n    \{\n        float3 colour_detail_3 = detail(uvOffset, positionUV, m_size_detail_3, m_colour_detail_3, \n                                 m_shift_detail_3, m_angles, m_type_secondary_details);\n\n        if (m_type_secondary_details == 1)\n        \{\n            float shift_detail_3_average = (m_shift_detail_3.x + m_shift_detail_3.y +\n                                            m_shift_detail_3.z)/3;\n            float3 colour_detail_3_edge = detail(uvOffset, positionUV, m_size_detail_3 - \n                                          m_size_detail_3*0.1f, m_colour_detail_3, \n                                          float3(shift_detail_3_average, shift_detail_3_average, \n                                          shift_detail_3_average), m_angles, m_type_secondary_details);\n\n            colour_detail_3_edge = colour_detail_3 - colour_detail_3_edge;\n            colour_detail_3 += colour_detail_3_edge;\n        \}\n\n        sample.x += colour_detail_3.x;\n        sample.y += colour_detail_3.y;\n        sample.z += colour_detail_3.z;\n    \}\n\n    // -------------- DOT 3 --------------\n    if (m_enable_dot_3 == 1)\n    \{\n        float3 small_dot_3 = smallDot(uvOffset, positionUV, m_dot_brightness_detail_3,\n                             m_colour_detail_3,m_dot_distance_detail_3);\n                                \n        sample.x += small_dot_3.x;\n        sample.y += small_dot_3.y;\n        sample.z += small_dot_3.z;\n    \}\n\n    // -------------- SECONDARY DETAIL 3 --------------\n    if (m_enable_secondary_detail_3 == 1)\n    \{\n        float3 secondary_3 = secondary(uvOffset, positionUV, m_secondary_brightness_detail_3,\n                             m_colour_detail_3, m_secondary_size_detail_3, 7.55f, m_angles, \n                             m_type_secondary_details);\n\n        if (m_type_secondary_details == 1)\n        \{\n            float3 secondary_3_edge = secondary(uvOffset, positionUV, m_secondary_brightness_detail_3,\n                                       m_colour_detail_3, m_secondary_size_detail_3 - m_secondary_size_detail_3*0.1f, \n                                       7.55f, m_angles, m_type_secondary_details);\n\n            secondary_3_edge = secondary_3 - secondary_3_edge;\n            secondary_3 += secondary_3_edge;\n        \}\n\n        sample.x += secondary_3.x;\n        sample.y += secondary_3.y;\n        sample.z += secondary_3.z;\n    \}\n\n    // -------------- DETAIL 4 --------------\n\tuvOffset = lerp2D(uv,uvDistance,m_distance_detail_4);\n\t\n    if (m_enable_detail_4 == 1)\n    \{\n        float3 colour_detail_4 = detail(uvOffset, positionUV, m_size_detail_4, m_colour_detail_4, \n                                 m_shift_detail_4, m_angles, m_type_secondary_details);\n\n        if (m_type_secondary_details == 1)\n        \{\n            float shift_detail_4_average = (m_shift_detail_4.x + m_shift_detail_4.y +\n                                            m_shift_detail_4.z)/3;\n            float3 colour_detail_4_edge = detail(uvOffset, positionUV, m_size_detail_4 - \n                                          m_size_detail_4*0.1f, m_colour_detail_4, \n                                          float3(shift_detail_4_average, shift_detail_4_average, \n                                          shift_detail_4_average), m_angles, m_type_secondary_details);\n\n            colour_detail_4_edge = colour_detail_4 - colour_detail_4_edge;\n            colour_detail_4 += colour_detail_4_edge;\n        \}\n\n        sample.x += colour_detail_4.x;\n        sample.y += colour_detail_4.y;\n        sample.z += colour_detail_4.z;\n    \}\n\n    // -------------- DOT 4 --------------\n    if (m_enable_dot_4 == 1)\n    \{\n        float3 small_dot_4 = smallDot(uvOffset, positionUV, m_dot_brightness_detail_4,\n                             m_colour_detail_4,m_dot_distance_detail_4);\n                                \n        sample.x += small_dot_4.x;\n        sample.y += small_dot_4.y;\n        sample.z += small_dot_4.z;\n    \}\n\n    // -------------- SECONDARY DETAIL 4 --------------\n    if (m_enable_secondary_detail_4 == 1)\n    \{\n        float3 secondary_4 = secondary(uvOffset, positionUV, m_secondary_brightness_detail_4,\n                             m_colour_detail_4, m_secondary_size_detail_4, 7.55f, m_angles, \n                             m_type_secondary_details);\n\n        if (m_type_secondary_details == 1)\n        \{\n            float3 secondary_4_edge = secondary(uvOffset, positionUV, m_secondary_brightness_detail_4,\n                                       m_colour_detail_4, m_secondary_size_detail_4 - m_secondary_size_detail_4*0.1f, \n                                       7.55f, m_angles, m_type_secondary_details);\n\n            secondary_4 = secondary_4 - secondary_4_edge;\n            secondary_4 += secondary_4_edge;\n        \}\n\n        sample.x += secondary_4.x;\n        sample.y += secondary_4.y;\n        sample.z += secondary_4.z;\n    \}\n\n    // assign result to output image\n    dst() = sample;\n  \}\n\n\};"
  rebuild ""
  LensFlare_Flare_Position {1460 1378}
  "LensFlare_Switch to Hexagons" {{parent.trigger_hexogons}}
  LensFlare_Angles 7
  "LensFlare_Enable Starburst" {{parent.trigger_starburst}}
  "LensFlare_Enable Anamorphic" {{parent.trigger_anamorpic}}
  "LensFlare_Enable Main Rainbow" {{parent.trigger_rainbow}}
  "LensFlare_Enable Floating Detail" {{parent.trigger_floating_detail}}
  "LensFlare_Enable Detail_1" {{parent.trigger_detail_1}}
  "LensFlare_Enable Secondary Detail_1" {{parent.trigger_secondary_detail_1}}
  "LensFlare_Enable Dot_1" {{parent.trigger_dot_detail_1}}
  "LensFlare_Enable Detail_2" {{parent.trigger_detail_2}}
  "LensFlare_Enable Secondary Detail_2" {{parent.trigger_secondary_detail_2}}
  "LensFlare_Enable Dot_2" {{parent.trigger_dot_detail_2}}
  "LensFlare_Enable Detail_3" {{parent.trigger_detail_3}}
  "LensFlare_Enable Secondary Detail_3" {{parent.trigger_secondary_detail_3}}
  "LensFlare_Enable Dot_3" {{parent.trigger_dot_detail_3}}
  "LensFlare_Enable Detail_4" {{parent.trigger_detail_4}}
  "LensFlare_Enable Secondary Detail_4" {{parent.trigger_secondary_detail_4}}
  "LensFlare_Enable Dot_4" {{parent.trigger_dot_detail_4}}
  "LensFlare_Central Rainbow Radius" 35.6
  "LensFlare_Colour Floating Detail" {0.4399999976 0.4199999869 0.4600000083 1.7}
  "LensFlare_Shift Floating Detail" {0.8000000119 0.8399999738 0.8899999857}
  "LensFlare_Aberration Shift for Detail1" {0.400000006 0.4250000119 0.4499999881}
  "LensFlare_Aberration Shift for Detail2" {0.200000003 0.29 0.275000006}
  "LensFlare_Aberration Shift for Detail3" {-0.3000000119 -0.3249999881 -0.349999994}
  "LensFlare_Aberration Shift for Detail4" {-0.3000000119 -0.3149999976 -0.3249999881}
  name BlinkScript1
  xpos 78
  ypos -5
 }
set Na03a7bd0 [stack 0]
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos 251
  ypos -1
 }
push $Na03a7bd0
 Switch {
  inputs 2
  which {{parent.trigger_sparkles}}
  name Switch2
  xpos 78
  ypos 66
 }
 Blur {
  size 1.5
  name Blur1
  xpos 78
  ypos 97
 }
 Defocus {
  defocus 0.2
  name Defocus1
  xpos 78
  ypos 139
 }
 Output {
  name Output1
  xpos 78
  ypos 191
 }
 Viewer {
  frame_range 1-1000
  name Viewer1
  xpos -97
  ypos 130
 }
end_group
